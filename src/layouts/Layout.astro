---
// Import main CSS for styling
import '../index.css';
import '../styles/integrations-animations.css';
import '../styles/image-performance.css';
import ScailUpHeader from '../components/active/shared/ScailUpHeader';
import { ViewTransitions } from 'astro:transitions';
import { getImage } from 'astro:assets';
import heroImage from '../../public/hero-bg-buildrs-8k.webp';
import platformDashboard from '../../public/platform-dashboard-fullwidth.webp';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  structuredData?: object;
}

const { title, description, keywords, structuredData } = Astro.props;

// Generate optimized image URLs for preloading
const optimizedHero = await getImage({ src: heroImage, format: 'webp', quality: 90, width: 1920 });
const optimizedPlatform = await getImage({ src: platformDashboard, format: 'webp', quality: 90, width: 1920 });
---

<!DOCTYPE html>
<html lang="nl" style="margin: 0 !important; padding: 0 !important; height: 100% !important; background-color: #000000 !important;">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  
  <!-- CRITICAL: Ultra-priority preloading with optimized Astro assets -->
  <link rel="preload" href={optimizedHero.src} as="image" fetchpriority="high" />
  <link rel="preload" href={optimizedPlatform.src} as="image" fetchpriority="high" />
  <link rel="preload" href="/marketing-engine-tree-visual.webp" as="image" fetchpriority="high" />
  
  <!-- CRITICAL: Preload key fonts for instant text rendering -->
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"></noscript>
  
  <!-- Secondary preloads for above-fold content -->
  <link rel="dns-prefetch" href="https://cdn.simpleicons.org" />
  <link rel="preconnect" href="https://cdn.simpleicons.org" crossorigin />
  
  <!-- CRITICAL: Prevent white flash and scroll flash -->
  <style>
    html, body {
      background-color: #000000 !important;
      margin: 0 !important;
      padding: 0 !important;
      min-height: 100vh !important;
    }
    
    /* Basic styling */
    * {
      box-sizing: border-box;
    }
    
    /* Image defaults */
    img {
      max-width: 100%;
      height: auto;
      display: block;
    }
    
    /* Professional loading - content always visible */
    body {
      opacity: 1;
      background-color: #000000;
    }
    
    /* Prevent scroll flash during restoration */
    body.scroll-restoring {
      overflow: hidden;
    }
    
    body.scroll-restoring main {
      visibility: hidden;
    }
  </style>
  
  <!-- Favicon -->
  <link rel="icon" href="/favicon.svg" type="image/svg+xml" sizes="any">

  <!-- SEO Meta Tags -->
  <title>{title}</title>
  {description && <meta name="description" content={description} />}
  {keywords && <meta name="keywords" content={keywords} />}

  <!-- Performance & Caching Optimizations -->
  <meta http-equiv="Cache-Control" content="public, max-age=31536000, immutable" />
  <meta http-equiv="Permissions-Policy" content="accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=()" />
  <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
  
  <!-- Resource Hints for Better Performance -->
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin />
  <link rel="dns-prefetch" href="https://res.cloudinary.com" />
  <link rel="dns-prefetch" href="https://api.supabase.io" />
  <!-- Preconnect for external logo CDNs used in IntegrationsShowcase -->
  <link rel="preconnect" href="https://cdn.simpleicons.org" crossorigin />
  <link rel="preconnect" href="https://logo.clearbit.com" crossorigin />
  
  <!-- Prefetch likely next routes for faster nav (landing-only) -->
  <link rel="prefetch" href="/contact/" />
  
  <!-- Critical CSS will be inlined by Astro build process -->
  <link rel="modulepreload" href="/src/index.css" />

  <!-- Content Security Policy -->
  <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; media-src 'self' https://res.cloudinary.com; font-src 'self' data:; connect-src 'self' https:; object-src 'none'; base-uri 'self';" />

  <!-- Preconnect to external domains -->
  <link rel="preconnect" href="https://res.cloudinary.com" />

  <!-- Canonical URL -->
  <link rel="canonical" href={`https://scailup.nl${Astro.url.pathname}`} />

  <!-- Open Graph -->
  <meta property="og:title" content={title} />
  {description && <meta property="og:description" content={description} />}
  <meta property="og:type" content="website" />
  <meta property="og:url" content={`https://scailup.nl${Astro.url.pathname}`} />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  {description && <meta name="twitter:description" content={description} />}

  <!-- Structured Data -->
  {structuredData && <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>}

  <!-- View Transitions DISABLED - preventing scroll restoration conflicts -->
  <!-- <ViewTransitions /> -->

  <!-- Performance optimizations -->
  <link rel="dns-prefetch" href="//fonts.googleapis.com" />

  <!-- CRITICAL: Instant visibility - no FOUC -->
  <style>
    /* Essential instant paint - no delays, no opacity transitions */
    html, body {
      margin: 0;
      padding: 0;
      background-color: #000000;
      color: #ffffff;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', system-ui, sans-serif;
      font-feature-settings: 'cv05' 1, 'kern' 1;
      text-rendering: optimizeLegibility;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      overflow-x: hidden;
    }
    
    /* Essential box model */
    *, *::before, *::after {
      box-sizing: border-box;
    }
    
    /* Main container - always black background with GPU acceleration */
    main {
      background-color: #000000;
      min-height: 100vh;
      transform: translateZ(0);
      will-change: auto;
    }
    
    /* Instant hero background visibility */
    section[class*="hero"] {
      background-color: #000000;
      min-height: 100vh;
    }
  </style>

  <!-- Glitch animations voor HomeAnimatedHeadline -->
  <style>
    .glitch-rgb-red { animation: glitch-rgb-red 120ms linear infinite; }
    .glitch-rgb-green { animation: glitch-rgb-green 120ms linear infinite; }
    .glitch-rgb-blue { animation: glitch-rgb-blue 120ms linear infinite; }
    .glitch-slice-1 { animation: glitch-slice-1 120ms linear infinite; }
    .glitch-slice-2 { animation: glitch-slice-2 120ms linear infinite; }
    .glitch-scanline { animation: glitch-scanline 120ms linear infinite; }

    @keyframes glitch-rgb-red {
      0% { transform: translate(-2px, -1px) skewX(-1deg); opacity: 0.8; }
      25% { transform: translate(1px, 2px) skewX(1deg); opacity: 0.9; }
      50% { transform: translate(-1px, 1px) skewX(-0.5deg); opacity: 0.7; }
      75% { transform: translate(2px, -2px) skewX(1.5deg); opacity: 0.8; }
      100% { transform: translate(-1px, 1px) skewX(0.5deg); opacity: 0.9; }
    }

    @keyframes glitch-rgb-green {
      0% { transform: translate(1px, -2px) skewY(1deg); opacity: 0.7; }
      25% { transform: translate(-2px, 1px) skewY(-1deg); opacity: 0.8; }
      50% { transform: translate(2px, 1px) skewY(0.5deg); opacity: 0.6; }
      75% { transform: translate(-1px, -2px) skewY(-1.5deg); opacity: 0.9; }
      100% { transform: translate(1px, 2px) skewY(1deg); opacity: 0.7; }
    }

    @keyframes glitch-rgb-blue {
      0% { transform: translate(2px, 1px) skewX(0.5deg); opacity: 0.9; }
      30% { transform: translate(-1px, -2px) skewX(-1deg); opacity: 0.6; }
      60% { transform: translate(3px, 1px) skewX(1.5deg); opacity: 0.8; }
      90% { transform: translate(-2px, -1px) skewX(-0.5deg); opacity: 0.7; }
      100% { transform: translate(1px, 2px) skewX(1deg); opacity: 0.8; }
    }

    @keyframes glitch-slice-1 {
      0% { transform: translateX(0px); }
      10% { transform: translateX(-5px) scaleX(1.05); }
      20% { transform: translateX(3px) scaleX(0.95); }
      30% { transform: translateX(-2px) scaleX(1.02); }
      40% { transform: translateX(4px) scaleX(0.98); }
      50% { transform: translateX(-3px) scaleX(1.03); }
      60% { transform: translateX(2px) scaleX(0.97); }
      70% { transform: translateX(-4px) scaleX(1.01); }
      80% { transform: translateX(3px) scaleX(0.99); }
      90% { transform: translateX(-1px) scaleX(1.02); }
      100% { transform: translateX(0px) scaleX(1); }
    }

    @keyframes glitch-slice-2 {
      0% { transform: translateX(0px); }
      15% { transform: translateX(4px) scaleX(0.96); }
      30% { transform: translateX(-3px) scaleX(1.04); }
      45% { transform: translateX(2px) scaleX(0.98); }
      60% { transform: translateX(-4px) scaleX(1.02); }
      75% { transform: translateX(3px) scaleX(0.97); }
      90% { transform: translateX(-1px) scaleX(1.01); }
      100% { transform: translateX(0px) scaleX(1); }
    }

    @keyframes glitch-scanline {
      0% { top: 0%; height: 2px; opacity: 0.8; }
      25% { top: 25%; height: 1px; opacity: 1; }
      50% { top: 50%; height: 3px; opacity: 0.6; }
      75% { top: 75%; height: 1px; opacity: 0.9; }
      100% { top: 100%; height: 2px; opacity: 0.7; }
    }
  </style>
</head>
<body class="min-h-screen bg-black text-white" style="margin: 0 !important; padding: 0 !important; height: 100% !important; position: relative !important; top: 0 !important;">
  <!-- ScailUp Navigation Header -->
  <ScailUpHeader client:load showAlways={true} />
  
  <slot />
  

  <!-- Smooth, minimal scroll restoration -->
  <script>
    try { if ('scrollRestoration' in history) history.scrollRestoration = 'manual'; } catch {}
    const STORAGE_KEY = 'buildrs_scroll_pos';
    function save(){ const y = window.scrollY||0; if (y>0) sessionStorage.setItem(STORAGE_KEY,String(y)); }
    let t; window.addEventListener('scroll',()=>{ clearTimeout(t); t=setTimeout(save,60); },{passive:true});
    window.addEventListener('beforeunload', save);
    window.addEventListener('pagehide', save);
    function restore(){ const s=sessionStorage.getItem(STORAGE_KEY); const pos=s?parseInt(s,10):0; if(!Number.isFinite(pos)||pos<=0) return; window.scrollTo(0,pos); requestAnimationFrame(()=>{ requestAnimationFrame(()=>window.scrollTo(0,pos)); }); }
    restore();
    window.addEventListener('pageshow', e=>{ if(e.persisted) restore(); });
  </script>
</body>
</html>
