---
// Import main CSS for styling
import '../index.css';
import '../styles/integrations-animations.css';
import '../styles/image-performance.css';
import ScailUpHeader from '../components/active/shared/ScailUpHeader';
import { ViewTransitions } from 'astro:transitions';
import { getImage } from 'astro:assets';
import heroImage from '../../public/hero-bg-buildrs-8k.webp';
import platformDashboard from '../../public/platform-dashboard-fullwidth.webp';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  structuredData?: object;
}

const { title, description, keywords, structuredData } = Astro.props;

// Generate optimized image URLs for preloading
const optimizedHero = await getImage({ src: heroImage, format: 'webp', quality: 90, width: 1920 });
const optimizedPlatform = await getImage({ src: platformDashboard, format: 'webp', quality: 90, width: 1920 });
---

<!DOCTYPE html>
<html lang="nl" style="margin: 0 !important; padding: 0 !important; height: 100% !important; background-color: #000000 !important;">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  
  <!-- CRITICAL: Ultra-priority preloading with optimized Astro assets -->
  <link rel="preload" href={optimizedHero.src} as="image" fetchpriority="high" />
  <link rel="preload" href={optimizedPlatform.src} as="image" fetchpriority="high" />
  <link rel="preload" href="/marketing-engine-tree-visual.webp" as="image" fetchpriority="high" />
  
  <!-- Secondary preloads for above-fold content -->
  <link rel="dns-prefetch" href="https://cdn.simpleicons.org" />
  <link rel="preconnect" href="https://cdn.simpleicons.org" crossorigin />
  
  <!-- CRITICAL: Prevent white flash by setting background immediately -->
  <style>
    html, body {
      background-color: #000000 !important;
      margin: 0 !important;
      padding: 0 !important;
      min-height: 100vh !important;
    }
    
    /* Basic styling */
    * {
      box-sizing: border-box;
    }
    
    /* Image defaults */
    img {
      max-width: 100%;
      height: auto;
      display: block;
    }
    
    /* Professional loading - content always visible */
    body {
      opacity: 1;
      background-color: #000000;
    }
  </style>
  
  <!-- Favicon -->
  <link rel="icon" href="/favicon.svg" type="image/svg+xml" sizes="any">

  <!-- SEO Meta Tags -->
  <title>{title}</title>
  {description && <meta name="description" content={description} />}
  {keywords && <meta name="keywords" content={keywords} />}

  <!-- Performance & Caching Optimizations -->
  <meta http-equiv="Cache-Control" content="public, max-age=31536000, immutable" />
  <meta http-equiv="Permissions-Policy" content="accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=()" />
  <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
  
  <!-- Resource Hints for Better Performance -->
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin />
  <link rel="dns-prefetch" href="https://res.cloudinary.com" />
  <link rel="dns-prefetch" href="https://api.supabase.io" />
  <!-- Preconnect for external logo CDNs used in IntegrationsShowcase -->
  <link rel="preconnect" href="https://cdn.simpleicons.org" crossorigin />
  <link rel="preconnect" href="https://logo.clearbit.com" crossorigin />
  
  <!-- Prefetch likely next routes for faster nav (landing-only) -->
  <link rel="prefetch" href="/contact/" />
  
  <!-- Critical CSS will be inlined by Astro build process -->
  <link rel="modulepreload" href="/src/index.css" />

  <!-- Content Security Policy -->
  <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; media-src 'self' https://res.cloudinary.com; font-src 'self' data:; connect-src 'self' https:; object-src 'none'; base-uri 'self';" />

  <!-- Preconnect to external domains -->
  <link rel="preconnect" href="https://res.cloudinary.com" />

  <!-- Canonical URL -->
  <link rel="canonical" href={`https://scailup.nl${Astro.url.pathname}`} />

  <!-- Open Graph -->
  <meta property="og:title" content={title} />
  {description && <meta property="og:description" content={description} />}
  <meta property="og:type" content="website" />
  <meta property="og:url" content={`https://scailup.nl${Astro.url.pathname}`} />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  {description && <meta name="twitter:description" content={description} />}

  <!-- Structured Data -->
  {structuredData && <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>}

  <!-- Astro View Transitions for smooth page changes -->
  <ViewTransitions />

  <!-- Performance optimizations -->
  <link rel="dns-prefetch" href="//fonts.googleapis.com" />

  <!-- CRITICAL CSS for instant hero visibility -->
  <style>
    /* Instant hero visibility - loaded before page render */
    body {
      margin: 0 !important;
      padding: 0 !important;
      background-color: #000000 !important;
      color: #ffffff !important;
      font-family: system-ui, -apple-system, sans-serif !important;
      overflow-x: hidden !important;
    }
    
    /* Prevent any flash of other content */
    * {
      box-sizing: border-box;
    }
    
    /* Ensure main container starts correctly */
    main {
      background-color: #000000 !important;
      min-height: 100vh !important;
    }

    #hero-container {
      position: relative;
      min-height: 90vh;
      background-color: #000000;
      display: block !important;
    }

    #hero-placeholder {
      position: absolute !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      background-color: #000000 !important;
      display: flex !important;
      align-items: flex-start !important;
      justify-content: center !important;
      padding-top: 25vh !important;
      padding-left: 1rem !important;
      padding-right: 1rem !important;
      z-index: 1000 !important;
    }

    /* BACKUP Apple animations - Kritiek voor de hero animaties */
    .apple-fade-in {
      /* Default: Always visible and positioned correctly */
      opacity: 1;
      transform: translateY(0);
      transition: opacity 0.3s ease, transform 0.3s ease; /* Smooth fallback */
    }

    /* Only animate when explicitly ready - progressive enhancement */
    .animate-ready .apple-fade-in {
      opacity: 0;
      transform: translateY(30px);
      animation: appleFadeIn 1.2s cubic-bezier(0.16, 1, 0.3, 1) forwards;
      transition: none; /* Disable transition when animating */
    }

    .animate-ready .apple-stagger-1 { animation-delay: 0.1s; }
    .animate-ready .apple-stagger-2 { animation-delay: 0.2s; }
    .animate-ready .apple-stagger-3 { animation-delay: 0.4s; }
    .animate-ready .apple-stagger-4 { animation-delay: 0.6s; }
    .animate-ready .apple-stagger-5 { animation-delay: 0.8s; }

    .apple-glow {
      animation: appleGlow 8s ease-in-out infinite;
    }

    .apple-card-hover {
      transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .apple-card-hover:hover {
      background: rgba(255, 255, 255, 0.12);
      border-color: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .apple-button-hover {
      transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .apple-button-hover:hover {
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
    }

    .apple-scale-hover:hover {
      transform: scale(1.02);
    }

    .apple-scroll-pulse {
      animation: appleScrollPulse 2s ease-in-out infinite;
    }

    @keyframes appleFadeIn {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes appleGlow {
      0%, 100% {
        opacity: 0.3;
        transform: scale(1);
      }
      50% {
        opacity: 0.5;
        transform: scale(1.05);
      }
    }

    @keyframes appleScrollPulse {
      0%, 100% {
        opacity: 0.4;
        transform: translateY(0);
      }
      50% {
        opacity: 1;
        transform: translateY(8px);
      }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-20px); }
    }

    /* Critical text styling */
    .instant-hero-title {
      font-size: clamp(2.25rem, 8vw, 8rem) !important;
      font-weight: 700 !important;
      color: #ffffff !important;
      line-height: 0.9 !important;
      letter-spacing: -0.025em !important;
      margin-bottom: 0.5rem !important;
      opacity: 0 !important;
      transform: translateY(30px) !important;
      animation: appleFadeIn 1.2s cubic-bezier(0.16, 1, 0.3, 1) forwards !important;
    }

    .instant-hero-subtitle {
      font-size: clamp(1.125rem, 4vw, 3rem) !important;
      margin-bottom: clamp(2rem, 8vw, 4rem) !important;
      line-height: 1.4 !important;
      font-weight: 300 !important;
      color: rgba(192, 192, 192, 0.9) !important;
      opacity: 0 !important;
      transform: translateY(30px) !important;
      animation: appleFadeIn 1.2s cubic-bezier(0.16, 1, 0.3, 1) 0.2s forwards !important;
    }

    .instant-hero-buttons {
      display: flex !important;
      flex-direction: column !important;
      gap: 1rem !important;
      justify-content: center !important;
      align-items: center !important;
      opacity: 0 !important;
      transform: translateY(30px) !important;
      animation: appleFadeIn 1.2s cubic-bezier(0.16, 1, 0.3, 1) 0.4s forwards !important;
    }

    @media (min-width: 640px) {
      .instant-hero-buttons {
        flex-direction: row !important;
        gap: 1.5rem !important;
      }
    }
  </style>

  <!-- Additional Animation CSS for Astro (index.css has main Apple animations) -->
  <style>
    /* Ensure body styling for instant visibility */
    body {
      margin: 0;
      padding: 0;
      background-color: #000000;
      color: #ffffff;
      font-family: system-ui, -apple-system, sans-serif;
    }

    /* AnimatedHeadline glitch animations - ensure they work in Astro */
    .glitch-rgb-red {
      animation: glitch-rgb-red 120ms linear infinite;
    }

    .glitch-rgb-green {
      animation: glitch-rgb-green 120ms linear infinite;
    }

    .glitch-rgb-blue {
      animation: glitch-rgb-blue 120ms linear infinite;
    }

    .glitch-slice-1 {
      animation: glitch-slice-1 120ms linear infinite;
    }

    .glitch-slice-2 {
      animation: glitch-slice-2 120ms linear infinite;
    }

    .glitch-scanline {
      animation: glitch-scanline 120ms linear infinite;
    }

    @keyframes glitch-rgb-red {
      0% { transform: translate(-2px, -1px) skewX(-1deg); opacity: 0.8; }
      25% { transform: translate(1px, 2px) skewX(1deg); opacity: 0.9; }
      50% { transform: translate(-1px, 1px) skewX(-0.5deg); opacity: 0.7; }
      75% { transform: translate(2px, -2px) skewX(1.5deg); opacity: 0.8; }
      100% { transform: translate(-1px, 1px) skewX(0.5deg); opacity: 0.9; }
    }

    @keyframes glitch-rgb-green {
      0% { transform: translate(1px, -2px) skewY(1deg); opacity: 0.7; }
      25% { transform: translate(-2px, 1px) skewY(-1deg); opacity: 0.8; }
      50% { transform: translate(2px, 1px) skewY(0.5deg); opacity: 0.6; }
      75% { transform: translate(-1px, -2px) skewY(-1.5deg); opacity: 0.9; }
      100% { transform: translate(1px, 2px) skewY(1deg); opacity: 0.7; }
    }

    @keyframes glitch-rgb-blue {
      0% { transform: translate(2px, 1px) skewX(0.5deg); opacity: 0.9; }
      30% { transform: translate(-1px, -2px) skewX(-1deg); opacity: 0.6; }
      60% { transform: translate(3px, 1px) skewX(1.5deg); opacity: 0.8; }
      90% { transform: translate(-2px, -1px) skewX(-0.5deg); opacity: 0.7; }
      100% { transform: translate(1px, 2px) skewX(1deg); opacity: 0.8; }
    }

    @keyframes glitch-slice-1 {
      0% { transform: translateX(0px); }
      10% { transform: translateX(-5px) scaleX(1.05); }
      20% { transform: translateX(3px) scaleX(0.95); }
      30% { transform: translateX(-2px) scaleX(1.02); }
      40% { transform: translateX(4px) scaleX(0.98); }
      50% { transform: translateX(-3px) scaleX(1.03); }
      60% { transform: translateX(2px) scaleX(0.97); }
      70% { transform: translateX(-4px) scaleX(1.01); }
      80% { transform: translateX(3px) scaleX(0.99); }
      90% { transform: translateX(-1px) scaleX(1.02); }
      100% { transform: translateX(0px) scaleX(1); }
    }

    @keyframes glitch-slice-2 {
      0% { transform: translateX(0px); }
      15% { transform: translateX(4px) scaleX(0.96); }
      30% { transform: translateX(-3px) scaleX(1.04); }
      45% { transform: translateX(2px) scaleX(0.98); }
      60% { transform: translateX(-4px) scaleX(1.02); }
      75% { transform: translateX(3px) scaleX(0.97); }
      90% { transform: translateX(-1px) scaleX(1.01); }
      100% { transform: translateX(0px) scaleX(1); }
    }

    @keyframes glitch-scanline {
      0% { top: 0%; height: 2px; opacity: 0.8; }
      25% { top: 25%; height: 1px; opacity: 1; }
      50% { top: 50%; height: 3px; opacity: 0.6; }
      75% { top: 75%; height: 1px; opacity: 0.9; }
      100% { top: 100%; height: 2px; opacity: 0.7; }
    }
  </style>
</head>
<body class="min-h-screen bg-black text-white" style="margin: 0 !important; padding: 0 !important; height: 100% !important; position: relative !important; top: 0 !important;">
  <!-- ScailUp Navigation Header -->
  <ScailUpHeader client:load showAlways={true} />
  
  <slot />
  

  <!-- Header scroll handling -->
  <script>
    function handleHeaderVisibility() {
      const header = document.querySelector('header');
      if (header && window.scrollY > 100) {
        header.classList.remove('opacity-0', '-translate-y-2', 'pointer-events-none');
        header.classList.add('opacity-100', 'translate-y-0');
      }
    }

    // Initialize header visibility
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', handleHeaderVisibility);
    } else {
      handleHeaderVisibility();
    }
  </script>

  <!-- Simple animation setup -->
  <script>
    // Simple animation initialization
    function initAnimations() {
      document.body.classList.add('animate-ready');
    }

    // Initialize on DOM ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initAnimations);
    } else {
      initAnimations();
    }
  </script>
  
  <!-- Professional loading - no FOUC prevention needed -->
</body>
</html>
